상속
	* 부모가 자식에게 물려주는 행위
	1. 목적
		- 빠른개발[ 미리 만들어진 클래스를 재사용 ]
		- 유지보수의 최소화
		- 라이브러리[ 자바에서 미리 만들어진 클래스들 ]
			- Thread 클래스
	2. 사용방법
		* 현재[자식]클래스가 상위[부모]클래스 선택
		- 선언
			Class 클래스명 extends 상위클래스명{ }
		* extends 뒤에는 하나의 클래스만 가능하다[ 상속1번만 가능]
		
	3. 제한
		private 		: 무조건 상속불가능
		default[생략시] 	: 같은 패키지에 있을경우만 가능
		protected		: 다른 패키지에서도 상속 가능
	4. 메모리구조
		* 	super	vs	this
		*	super.필드명	this.필드명
		*	super( )		this( )
		*	super.메소드( )	this.메소드명( ) / 메소드명( )
	
	5. final : 최종적인 = 수정불가,상속불가
		final class 클래스명 : 상속불가
		final int 변수 : 수정불가
		final void 함수( ) : 재정의 불가


		스택			힙

					부모객체
					     ㅅ
		변수(객체주소)		 |
					     |
			       ---------->	자식객체
		자동차회사	SportCar클래스
 
		Car 클래스	
				SuvCar클래스
				
		상속[extends] 
				- extends 하나의 클래스만 가능
			*[선언] class 클래스 A extends 클래스B{ }
			*[기능] A클래스에서 B클래스의 멤버를 사용할수 있다.
			*[키워드]
				1. super.필드명 	super()		super.메소드명()
				2. Class final 클래스B{}
				3. final void메소드(){}
			*[재정의] : @Overriding
					* 자바에서는 동일한 구조내에서 동일한 이름[식별자] 사용불가
					* 부모[슈퍼/상위] 클래스로부터 상속받은 메소드를 재정의
					
					  @Overroding
			*[구조] 
				1. 하위클래스로 객체 선언시
					1. 상위클래스의 생성자가 먼저 호출[주의점 : 상위클래스와 하위클래스 생성자 와 하위클래스 생성자 동일]
					2. 하위클래스의 생성자로부터 객체 선언
					[ 모든 클래스는 object 클래스로 자동으로 상속받는다. ] : 자바는 100% 객체지향		  
			
			
			다형성 : 하나 타입에 여러개의 타입을 넣을수있다.
			
			
			[ 타입변환 ]
					자동타입 변환
							부모[직속] <---- 자식
							-부모타입 변수 = 자식타입 ;
							*형 변환된 부모객체는 자식클래스의 멤버에 접근 불가.[ 단 오버라이딩 일 경우는 접근이 허용된다. ]
					강제타입 변환
							부모 -----> 자식
							자식타입 변수 = (자식타입)부모타입;
							
							* 자식타입이 부모타입으로부터 extends 상속 받았을때
							- 부모타입 instanceof타입/클래스/자료형 -> 상속 관계이면 True / 아니면 false
							
									예시)
											if( 객체명 instanceOf 클래스명){
													클래스명 객체명 = (클래스명)객체명
											}else{ 상속 관계가 아니므로 강제타입 불가능
											}
											
									
				각 클래스들의 멤버[필드,생성자,메소드]의 중복 ---> 슈퍼클래스로 설계
				
				은행
				
				국민은행 	신한은행 	농협
				